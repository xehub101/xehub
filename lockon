local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local Camera = game.Workspace.CurrentCamera

local player = Players.LocalPlayer
local mouse = player:GetMouse()

local isLockingOn = false
local targetPlayer = nil

local Holder = Instance.new("Folder", game.CoreGui)
Holder.Name = "ESP"

local Box = Instance.new("BoxHandleAdornment")
Box.Name = "nilBox"
Box.Size = Vector3.new(4, 7, 4)
Box.Color3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
Box.Transparency = 0.7
Box.ZIndex = 0
Box.AlwaysOnTop = true
Box.Visible = true

local NameTag = Instance.new("BillboardGui")
NameTag.Name = "nilNameTag"
NameTag.Enabled = false
NameTag.Size = UDim2.new(0, 200, 0, 50)
NameTag.AlwaysOnTop = true
NameTag.StudsOffset = Vector3.new(0, 1.8, 0)
local Tag = Instance.new("TextLabel", NameTag)
Tag.Name = "Tag"
Tag.BackgroundTransparency = 1
Tag.Position = UDim2.new(0, -50, 0, 0)
Tag.Size = UDim2.new(0, 300, 0, 20)
Tag.TextSize = 20
Tag.TextColor3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
Tag.TextStrokeColor3 = Color3.new(0 / 255, 0 / 255, 0 / 255)
Tag.TextStrokeTransparency = 0.4
Tag.Text = "nil"
Tag.Font = Enum.Font.SourceSansBold
Tag.TextScaled = false

local function toggleLockOn()
    isLockingOn = not isLockingOn
    if not isLockingOn then
        targetPlayer = nil
    end
end

local function handleInput(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        toggleLockOn()
    end

    -- Detect tap on mobile
    if input.UserInputType == Enum.UserInputType.Touch and input.UserInputState == Enum.UserInputState.Begin then
        toggleLockOn()
    end
end

UserInputService.InputBegan:Connect(handleInput)

game:GetService("RunService").Stepped:Connect(function(_, dt)
    if isLockingOn then
        local playerPosition = Camera.CFrame.Position
        local playerTeam = player.Team
        local cameraLook = Camera.CFrame.LookVector

        local closestPlayer, closestAngle = nil, math.huge

        for _, otherPlayer in ipairs(Players:GetPlayers()) do
            if otherPlayer ~= player and otherPlayer.Team ~= playerTeam then
                local character = otherPlayer.Character
                if character then
                    local head = character:FindFirstChild("Head")
                    if head then
                        local headPosition = head.Position
                        local toHead = (headPosition - playerPosition).unit

                        local angle = math.acos(cameraLook:Dot(toHead))

                        if angle < math.rad(30) and angle < closestAngle then
                            closestPlayer = otherPlayer
                            closestAngle = angle
                        end
                    end
                end
            end
        end

        if closestPlayer then
            targetPlayer = closestPlayer
        else
            targetPlayer = nil
        end
    end

    if isLockingOn and targetPlayer then
        local targetCharacter = targetPlayer.Character
        if targetCharacter then
            local head = targetCharacter:FindFirstChild("Head")
            if head then
                Camera.CFrame = CFrame.new(Camera.CFrame.Position, head.Position)
            end
        end
    end

    -- Update ESP
    for _, v in pairs(Holder:GetChildren()) do
        if v:IsA("Folder") then
            local playerName = v.Name
            local vPlayer = Players:FindFirstChild(playerName)

            if vPlayer and vPlayer.Team ~= player.Team then
                local character = vPlayer.Character
                if character then
                    local head = character:FindFirstChild("Head")
                    if head then
                        local screenPos = Camera:WorldToViewportPoint(head.Position)
                        if screenPos.Z > 0 then
                            local distance = (head.Position - player.Position).magnitude
                            local scale = 1 / distance
                            v.Adornee = head
                            v.Size = Vector3.new(4 * scale, 7 * scale, 4 * scale)
                            v.CFrame = CFrame.new(head.Position)
                            v.Visible = true

                            local nameTag = v:FindFirstChild(playerName .. "NameTag")
                            if nameTag then
                                nameTag.Enabled = true
                                nameTag.StudsOffset = Vector3.new(0, 1.8 * scale, 0)
                                nameTag.Size = UDim2.new(0, 200 * scale, 0, 50 * scale)
                                nameTag.Adornee = head

                                local tag = nameTag.Tag
                                tag.Position = UDim2.new(0, -50 * scale, 0, 0)
                                tag.Size = UDim2.new(0, 300 * scale, 0, 20 * scale)
                                tag.TextSize = 20 * scale
                            end
                        else
                            v.Visible = false
                        end
                    end
                end
            end
        end
    end
end)

local LoadCharacter = function(v)
    repeat wait() until v.Character ~= nil
    v.Character:WaitForChild("Humanoid")
    local vHolder = Holder:FindFirstChild(v.Name)
    vHolder:ClearAllChildren()
    local b = Box:Clone()
    b.Name = v.Name .. "Box"
    b.Adornee = v.Character
    b.Parent = vHolder
    local t = NameTag:Clone()
    t.Name = v.Name .. "NameTag"
    t.Enabled = true
    t.Parent = vHolder
    t.Adornee = v.Character:WaitForChild("Head", 5)
    if not t.Adornee then
        return UnloadCharacter(v)
    end
    t.Tag.Text = v.Name
    b.Color3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
    t.Tag.TextColor3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
    local Update
    local UpdateNameTag = function()
        if not pcall(function()
            v.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
            local maxh = math.floor(v.Character.Humanoid.MaxHealth)
            local h = math.floor(v.Character.Humanoid.Health)
            t.Tag.Text = v.Name .. "\n" .. ((maxh ~= 0 and tostring(math.floor((h / maxh) * 100))) or "0") .. "%  " .. tostring(h) .. "/" .. tostring(maxh)
        end) then
            Update:Disconnect()
        end
    end
     UpdateNameTag()
    Update = v.Character.Humanoid.Changed:Connect(UpdateNameTag)
end

local UnloadCharacter = function(v)
    local vHolder = Holder:FindFirstChild(v.Name)
    if vHolder and (vHolder:FindFirstChild(v.Name .. "Box") ~= nil or vHolder:FindFirstChild(v.Name .. "NameTag") ~= nil) then
        vHolder:ClearAllChildren()
    end
end

local LoadPlayer = function(v)
    if v.Team ~= player.Team then
        local vHolder = Instance.new("Folder", Holder)
        vHolder.Name = v.Name
        v.CharacterAdded:Connect(function()
            pcall(LoadCharacter, v)
        end)
        v.CharacterRemoving:Connect(function()
            pcall(UnloadCharacter, v)
        end)
        v.Changed:Connect(function(prop)
            if prop == "TeamColor" then
                UnloadCharacter(v)
                wait()
                LoadCharacter(v)
            end
        end)
        LoadCharacter(v)
    end
end

local UnloadPlayer = function(v)
    UnloadCharacter(v)
    local vHolder = Holder:FindFirstChild(v.Name)
    if vHolder then
        vHolder:Destroy()
    end
end

for i,v in pairs(game:GetService("Players"):GetPlayers()) do
    spawn(function() pcall(LoadPlayer, v) end)
end

game:GetService("Players").PlayerAdded:Connect(function(v)
    pcall(LoadPlayer, v)
end)

game:GetService("Players").PlayerRemoving:Connect(function(v)
    pcall(UnloadPlayer, v)
end)

game:GetService("Players").LocalPlayer.NameDisplayDistance = 0
